# Task-list: Создание криптовалютного блокчейна на Python

## 1. Начальный уровень (базовые процессы и системы)
1. Создание структуры блока:
   - Реализовать класс `Block`.
   - Добавить поля: индекс, хэш предыдущего блока, данные, временная метка, хэш.
   - Реализовать метод для вычисления хэша блока.

2. Создание блокчейна:
   - Реализовать класс `Blockchain`.
   - Создать генезис-блок (первый блок).
   - Реализовать метод для добавления нового блока.

3. Проверка целостности блокчейна:
   - Реализовать метод для проверки корректности цепочки блоков.

## 2. Средний уровень (профессиональные навыки)
1. Реализация Proof of Work (PoW):
   - Добавить майнинг (поиск nonce для соответствия сложности).
   - Реализовать метод `mine_block`.

2. Создание транзакций:
   - Реализовать класс `Transaction`.
   - Добавить поля: отправитель, получатель, сумма.

3. Валидация транзакций:
   - Реализовать проверку баланса отправителя.
   - Добавить транзакции в блок.

4. Создание кошельков:
   - Реализовать генерацию криптографических ключей.
   - Добавить подпись транзакций.

## 3. Продвинутый уровень (продвинутые системы и процессы)
1. Создание P2P-сети:
   - Реализовать простую P2P-сеть для обмена данными между узлами.
   - Добавить возможность синхронизации блокчейна между узлами.

2. Реализация консенсуса:
   - Добавить механизм выбора самой длинной цепочки.
   - Реализовать разрешение конфликтов.

3. Оптимизация и масштабирование:
   - Изучить и реализовать методы оптимизации (например, кэширование хэшей).

4. Добавление смарт-контрактов:
   - Реализовать простой механизм выполнения смарт-контрактов.

## Как пользоваться Task-list
1. Начните с задач начального уровня, чтобы понять основы.
2. Переходите к среднему уровню, когда освоите базовые концепции.
3. Продвинутый уровень — для углубленного изучения и улучшения системы.
4. Сверяйтесь с этим списком, чтобы отслеживать прогресс.